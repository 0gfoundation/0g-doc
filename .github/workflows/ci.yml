name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Lint code
      run: |
        if [ -f "package.json" ] && grep -q '"lint"' package.json; then
          yarn lint
        else
          echo "No lint script found, skipping..."
        fi
    
    - name: Type check
      run: |
        if [ -f "tsconfig.json" ]; then
          npx tsc --noEmit
        else
          echo "No TypeScript config found, skipping type check..."
        fi
    
    - name: Build documentation
      run: yarn build
    
    - name: Test build output
      run: |
        if [ ! -d "build" ]; then
          echo "Build directory not found!"
          exit 1
        fi
        if [ ! -f "build/index.html" ]; then
          echo "Index.html not found in build directory!"
          exit 1
        fi
        echo "Build successful âœ…"

  link-checker:
    name: Check Links
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build site
      run: yarn build
    
    - name: Serve site and check links
      run: |
        # Install link checker
        npm install -g broken-link-checker
        
        # Start server in background
        npx http-server build -p 3000 &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Check internal links only
        blc http://localhost:3000 --recursive --exclude-external || echo "Some links may be broken, please review"
        
        # Kill server
        kill $SERVER_PID

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Lint Markdown files
      uses: articulate/actions-markdownlint@v1
      with:
        config: .markdownlint.json
        files: '**/*.md'
        ignore: 'node_modules'
      continue-on-error: true

  spell-check:
    name: Spell Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Spell check
      uses: streetsidesoftware/cspell-action@v6
      with:
        files: |
          **/*.md
          **/*.mdx
          docs/**/*.md
        config: .cspell.json
      continue-on-error: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run security audit
      run: |
        yarn audit --audit-level moderate || echo "Security vulnerabilities found, please review"
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build site
      run: yarn build
    
    - name: Run accessibility tests
      run: |
        # Install axe-cli
        npm install -g @axe-core/cli http-server
        
        # Start server in background
        npx http-server build -p 3000 &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 10
        
        # Run accessibility tests
        axe http://localhost:3000 --exit || echo "Accessibility issues found, please review"
        
        # Kill server
        kill $SERVER_PID